{"ast":null,"code":"import _regeneratorRuntime from\"/home/anshuman/Desktop/CodeShare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/anshuman/Desktop/CodeShare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/anshuman/Desktop/CodeShare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from'react';import toast from'react-hot-toast';import ACTIONS from'../Actions';import Client from'../components/Client';import Editor from'../components/Editor';import{initSocket}from'../socket';import{useLocation,useNavigate,Navigate,useParams}from'react-router-dom';var EditorPage=function EditorPage(){var socketRef=useRef(null);var codeRef=useRef(null);var location=useLocation();var _useParams=useParams(),roomId=_useParams.roomId;var reactNavigator=useNavigate();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),clients=_useState2[0],setClients=_useState2[1];useEffect(function(){var init=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _location$state;var handleErrors;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:handleErrors=function _handleErrors(err){console.log('socket error',err);toast.error('Socket connection failed, try again later.');reactNavigator('/');};_context.next=3;return initSocket();case 3:socketRef.current=_context.sent;socketRef.current.on('connect_error',function(err){return handleErrors(err);});socketRef.current.on('connect_failed',function(err){return handleErrors(err);});socketRef.current.emit(ACTIONS.JOIN,{roomId:roomId,username:(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.username});// Listening for joined event\nsocketRef.current.on(ACTIONS.JOINED,function(_ref2){var _location$state2;var clients=_ref2.clients,username=_ref2.username,socketId=_ref2.socketId;if(username!==((_location$state2=location.state)===null||_location$state2===void 0?void 0:_location$state2.username)){toast.success(\"\".concat(username,\" joined the room.\"));console.log(\"\".concat(username,\" joined\"));}setClients(clients);console.log('Debug',clients);socketRef.current.emit(ACTIONS.SYNC_CODE,{code:codeRef.current,socketId:socketId});});// Listening for disconnected\nsocketRef.current.on(ACTIONS.DISCONNECTED,function(_ref3){var socketId=_ref3.socketId,username=_ref3.username;toast.success(\"\".concat(username,\" left the room.\"));setClients(function(prev){return prev.filter(function(client){return client.socketId!==socketId;});});});case 9:case\"end\":return _context.stop();}}},_callee);}));return function init(){return _ref.apply(this,arguments);};}();init();return function(){socketRef.current.disconnect();socketRef.current.off(ACTIONS.JOINED);socketRef.current.off(ACTIONS.DISCONNECTED);};},[]);function copyRoomId(){return _copyRoomId.apply(this,arguments);}function _copyRoomId(){_copyRoomId=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return navigator.clipboard.writeText(roomId);case 3:toast.success('Room ID has been copied to your clipboard');_context2.next=10;break;case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](0);toast.error('Could not copy the Room ID');console.error(_context2.t0);case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,6]]);}));return _copyRoomId.apply(this,arguments);}function leaveRoom(){reactNavigator('/');}if(!location.state){return/*#__PURE__*/React.createElement(Navigate,{to:\"/\"});}return/*#__PURE__*/React.createElement(\"div\",{className:\"mainWrap\"},/*#__PURE__*/React.createElement(\"div\",{className:\"aside\"},/*#__PURE__*/React.createElement(\"div\",{className:\"asideInner\"},/*#__PURE__*/React.createElement(\"div\",{className:\"logo\"},/*#__PURE__*/React.createElement(\"img\",{className:\"logoImage\",src:\"/img/coding.png\",alt:\"logo\"}),/*#__PURE__*/React.createElement(\"span\",{style:{fontWeight:'bold',marginLeft:'20px',fontSize:'18px'}},\"codeShare\")),/*#__PURE__*/React.createElement(\"h3\",{style:{margin:'10px 0px'}},\"Connected\"),/*#__PURE__*/React.createElement(\"div\",{className:\"clientsList\"},clients.map(function(client){return/*#__PURE__*/React.createElement(Client,{key:client.socketId,username:client.username});}))),/*#__PURE__*/React.createElement(\"button\",{className:\"btn copyBtn\",onClick:copyRoomId},\"Copy ROOM ID\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn leaveBtn\",onClick:leaveRoom},\"Leave\")),/*#__PURE__*/React.createElement(\"div\",{className:\"editorWrap\"},/*#__PURE__*/React.createElement(Editor,{socketRef:socketRef,roomId:roomId,onCodeChange:function onCodeChange(code){codeRef.current=code;}})));};export default EditorPage;","map":{"version":3,"sources":["/home/anshuman/Desktop/CodeShare/src/Pages/EditorPage.js"],"names":["React","useState","useRef","useEffect","toast","ACTIONS","Client","Editor","initSocket","useLocation","useNavigate","Navigate","useParams","EditorPage","socketRef","codeRef","location","roomId","reactNavigator","clients","setClients","init","handleErrors","err","console","log","error","current","on","emit","JOIN","username","state","JOINED","socketId","success","SYNC_CODE","code","DISCONNECTED","prev","filter","client","disconnect","off","copyRoomId","navigator","clipboard","writeText","leaveRoom","fontWeight","marginLeft","fontSize","margin","map"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport ACTIONS from '../Actions';\r\nimport Client from '../components/Client';\r\nimport Editor from '../components/Editor';\r\nimport { initSocket } from '../socket';\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    Navigate,\r\n    useParams,\r\n} from 'react-router-dom';\r\n\r\nconst EditorPage = () => {\r\n    const socketRef = useRef(null);\r\n    const codeRef = useRef(null);\r\n    const location = useLocation();\r\n    const { roomId } = useParams();\r\n    const reactNavigator = useNavigate();\r\n    const [clients, setClients] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            socketRef.current = await initSocket();\r\n            socketRef.current.on('connect_error', (err) => handleErrors(err));\r\n            socketRef.current.on('connect_failed', (err) => handleErrors(err));\r\n\r\n            function handleErrors(err) {\r\n                console.log('socket error', err);\r\n                toast.error('Socket connection failed, try again later.');\r\n                reactNavigator('/');\r\n            }\r\n\r\n            socketRef.current.emit(ACTIONS.JOIN, {\r\n                roomId,\r\n                username: location.state?.username,\r\n            });\r\n\r\n            // Listening for joined event\r\n            socketRef.current.on(\r\n                ACTIONS.JOINED,\r\n                ({ clients, username, socketId }) => {\r\n                    if (username !== location.state?.username) {\r\n                        toast.success(`${username} joined the room.`);\r\n                        console.log(`${username} joined`);\r\n                    }\r\n                    setClients(clients);\r\n                    console.log('Debug',clients);\r\n                    socketRef.current.emit(ACTIONS.SYNC_CODE, {\r\n                        code: codeRef.current,\r\n                        socketId,\r\n                    });\r\n                }\r\n            );\r\n\r\n            // Listening for disconnected\r\n            socketRef.current.on(\r\n                ACTIONS.DISCONNECTED,\r\n                ({ socketId, username }) => {\r\n                    toast.success(`${username} left the room.`);\r\n                    setClients((prev) => {\r\n                        return prev.filter(\r\n                            (client) => client.socketId !== socketId\r\n                        );\r\n                    });\r\n                }\r\n            );\r\n        };\r\n        init();\r\n        return () => {\r\n            socketRef.current.disconnect();\r\n            socketRef.current.off(ACTIONS.JOINED);\r\n            socketRef.current.off(ACTIONS.DISCONNECTED);\r\n        };\r\n    }, []);\r\n\r\n    async function copyRoomId() {\r\n        try {\r\n            await navigator.clipboard.writeText(roomId);\r\n            toast.success('Room ID has been copied to your clipboard');\r\n        } catch (err) {\r\n            toast.error('Could not copy the Room ID');\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    function leaveRoom() {\r\n        reactNavigator('/');\r\n    }\r\n\r\n    if (!location.state) {\r\n        return <Navigate to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"mainWrap\">\r\n            <div className=\"aside\">\r\n                <div className=\"asideInner\">\r\n                    <div className=\"logo\">\r\n                        <img\r\n                            className=\"logoImage\"\r\n                            src=\"/img/coding.png\"\r\n                            alt=\"logo\"\r\n                        />\r\n                            <span style={{fontWeight:'bold',marginLeft:'20px',fontSize:'18px'}}>codeShare</span>\r\n                      \r\n                        \r\n                    </div>\r\n                    <h3 style={{margin:'10px 0px'}}>Connected</h3>\r\n                    <div className=\"clientsList\">\r\n                        {clients.map((client) => (\r\n                            <Client\r\n                                key={client.socketId}\r\n                                username={client.username}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn copyBtn\" onClick={copyRoomId}>\r\n                    Copy ROOM ID\r\n                </button>\r\n                <button className=\"btn leaveBtn\" onClick={leaveRoom}>\r\n                    Leave\r\n                </button>\r\n            </div>\r\n            <div className=\"editorWrap\">\r\n                <Editor\r\n                    socketRef={socketRef}\r\n                    roomId={roomId}\r\n                    onCodeChange={(code) => {\r\n                        codeRef.current = code;\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditorPage;"]},"metadata":{},"sourceType":"module"}